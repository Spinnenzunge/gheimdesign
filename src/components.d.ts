/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GdButton {
        /**
          * If `true`, the user cannot interact with the button.
         */
        "disabled": boolean;
        /**
          * If `true`, the button has a pulsating effect for highlighting the element in the content.
         */
        "highlighted": boolean;
        /**
          * Creates an outlined button that is flush with the surface.
         */
        "outlined": boolean;
        /**
          * The button size.
         */
        "size": 'small' | 'default' | 'large';
        /**
          * The type of the button.
         */
        "type": 'button' | 'reset' | 'submit';
    }
    interface GdInputContainer {
    }
    interface GdTextfield {
        /**
          * The input hint text.
         */
        "hint": string;
        "invalid": boolean;
        /**
          * The input label.
         */
        "label": string;
    }
}
declare global {
    interface HTMLGdButtonElement extends Components.GdButton, HTMLStencilElement {
    }
    var HTMLGdButtonElement: {
        prototype: HTMLGdButtonElement;
        new (): HTMLGdButtonElement;
    };
    interface HTMLGdInputContainerElement extends Components.GdInputContainer, HTMLStencilElement {
    }
    var HTMLGdInputContainerElement: {
        prototype: HTMLGdInputContainerElement;
        new (): HTMLGdInputContainerElement;
    };
    interface HTMLGdTextfieldElement extends Components.GdTextfield, HTMLStencilElement {
    }
    var HTMLGdTextfieldElement: {
        prototype: HTMLGdTextfieldElement;
        new (): HTMLGdTextfieldElement;
    };
    interface HTMLElementTagNameMap {
        "gd-button": HTMLGdButtonElement;
        "gd-input-container": HTMLGdInputContainerElement;
        "gd-textfield": HTMLGdTextfieldElement;
    }
}
declare namespace LocalJSX {
    interface GdButton {
        /**
          * If `true`, the user cannot interact with the button.
         */
        "disabled"?: boolean;
        /**
          * If `true`, the button has a pulsating effect for highlighting the element in the content.
         */
        "highlighted"?: boolean;
        /**
          * Creates an outlined button that is flush with the surface.
         */
        "outlined"?: boolean;
        /**
          * The button size.
         */
        "size"?: 'small' | 'default' | 'large';
        /**
          * The type of the button.
         */
        "type"?: 'button' | 'reset' | 'submit';
    }
    interface GdInputContainer {
    }
    interface GdTextfield {
        /**
          * The input hint text.
         */
        "hint"?: string;
        "invalid"?: boolean;
        /**
          * The input label.
         */
        "label": string;
    }
    interface IntrinsicElements {
        "gd-button": GdButton;
        "gd-input-container": GdInputContainer;
        "gd-textfield": GdTextfield;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gd-button": LocalJSX.GdButton & JSXBase.HTMLAttributes<HTMLGdButtonElement>;
            "gd-input-container": LocalJSX.GdInputContainer & JSXBase.HTMLAttributes<HTMLGdInputContainerElement>;
            "gd-textfield": LocalJSX.GdTextfield & JSXBase.HTMLAttributes<HTMLGdTextfieldElement>;
        }
    }
}
